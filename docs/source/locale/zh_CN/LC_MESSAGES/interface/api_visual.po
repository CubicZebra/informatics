# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Chen Zhang
# This file is distributed under the same license as the informatics
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: informatics 0.0.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 22:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/interface/api_visual.rst:2
msgid "_`Option visualization`"
msgstr ""

#: ../../source/interface/api_visual.rst:7
msgid "Description"
msgstr ""

#: ../../source/interface/api_visual.rst:9
msgid ""
"Applications that enable visualize data anywhere in any stages through "
"minimal calling. Helpful for data diagnosis, position and orientation "
"checking (specifically for medical images), making analysis and summary, "
"as well as result export. Running of this module requires `pyqtgraph "
"<http://www.pyqtgraph.org/>`_ and one of compatible backends. All object "
"listed here have been integrated into the entry of ``info.vis``."
msgstr ""

#: ../../source/interface/api_visual.rst:21:<autosummary>:1
msgid ":py:obj:`GrpSettings <info.docfunc.GrpSettings>`"
msgstr ""

#: ../../source/interface/api_visual.rst:21:<autosummary>:1
msgid "configuration for plotting group data."
msgstr ""

#: ../../source/interface/api_visual.rst:21:<autosummary>:1
msgid ":py:obj:`FigConfigs <info.docfunc.FigConfigs>`"
msgstr ""

#: ../../source/interface/api_visual.rst:21:<autosummary>:1
msgid "default figure configuration container."
msgstr ""

#: ../../source/interface/api_visual.rst:21:<autosummary>:1
msgid ":py:obj:`Canvas <info.docfunc.Canvas>`"
msgstr ""

#: ../../source/interface/api_visual.rst:21:<autosummary>:1
msgid "generic visualization utility."
msgstr ""

#: ../../source/interface/api_visual.rst:21:<autosummary>:1
msgid ":py:obj:`ImageViewer <info.docfunc.ImageViewer>`"
msgstr ""

#: ../../source/interface/api_visual.rst:21:<autosummary>:1
#: info.docfunc.ImageViewer:1 of
msgid "interactive viewer for 3D image."
msgstr ""

#: ../../source/interface/api_visual.rst:23
msgid "Docstrings"
msgstr ""

#: info.docfunc.GrpSettings:1 of
msgid ""
"configuration for plotting group data. arguments vary among groups should"
" to be listed as the identical size as the number of groups."
msgstr ""

#: ../../source/interface/api_visual.rst
msgid "参数"
msgstr ""

#: info.docfunc.GrpSettings:6 of
#, python-brace-format
msgid ""
"initiate using keywords and values; no assignment for empty dict ``{}`` "
"as default"
msgstr ""

#: ../../source/interface/api_visual.rst
msgid "变量"
msgstr ""

#: info.docfunc.GrpSettings:7 of
msgid "show warning or not; ``False`` as default"
msgstr ""

#: ../../source/interface/api_visual.rst
msgid "返回"
msgstr ""

#: info.docfunc.GrpSettings:8 of
msgid "figure configuration dict"
msgstr ""

#: ../../source/interface/api_visual.rst
msgid "返回类型"
msgstr ""

#: ../../source/interface/api_visual.rst
msgid "抛出"
msgstr ""

#: info.docfunc.GrpSettings:10 of
msgid "if ``name`` is not assigned properly"
msgstr ""

#: info.docfunc.GrpSettings:16 of
msgid "intrinsic number of groups for valid iteration."
msgstr ""

#: info.docfunc.GrpSettings:20 of
msgid ""
"tuple composed of plot configuration for each group. prompt UserWarning "
"if self adaption run due to length of list container does not match "
"``self.sub`` if ``~verbosity`` is ``True``."
msgstr ""

#: info.docfunc.GrpSettings:27 of
msgid "return a copy of self. can be updated from ``kwargs``"
msgstr ""

#: info.docfunc.GrpSettings:31 of
msgid "customized scatter plot"
msgstr ""

#: info.docfunc.GrpSettings:57 of
msgid "The final plot will be:"
msgstr ""

#: info.docfunc.GrpSettings:64 of
msgid "canvas used for customized scatter plot"
msgstr ""

#: info.docfunc.FigConfigs:76 info.docfunc.GrpSettings:68 of
msgid ":py:class:`~info.docfunc.Canvas`"
msgstr ""

#: info.docfunc.Canvas:260 info.docfunc.FigConfigs:86
#: info.docfunc.GrpSettings:74 info.docfunc.ImageViewer:94 of
msgid "-- |signature|"
msgstr ""

#: info.docfunc.FigConfigs:1 of
msgid ""
"default figure configuration container. support types of line, scatter, "
"histogram, beeswarm, box, and image. all properties in ``FigConfigs`` are"
" ``GrpSettings`` instances."
msgstr ""

#: info.docfunc.FigConfigs:6 of
msgid "a basic figure configuration container"
msgstr ""

#: info.docfunc.FigConfigs:13 of
msgid "basic figure configuration for line plot."
msgstr ""

#: info.docfunc.FigConfigs:17 of
msgid "basic figure configuration for scatter plot."
msgstr ""

#: info.docfunc.FigConfigs:21 of
msgid "basic figure configuration for histogram plot."
msgstr ""

#: info.docfunc.FigConfigs:25 of
msgid "basic figure configuration for beeswarm plot."
msgstr ""

#: info.docfunc.FigConfigs:29 of
msgid "basic figure configuration for box plot."
msgstr ""

#: info.docfunc.FigConfigs:33 of
msgid "basic figure configuration for radar plot."
msgstr ""

#: info.docfunc.FigConfigs:37 of
msgid "basic figure configurations for image viewer."
msgstr ""

#: info.docfunc.FigConfigs:41 of
msgid ""
"With ``FigConfigs``, it is handy to visualize data via "
":py:class:`~data.docfunc.Canvas`:"
msgstr ""

#: info.docfunc.FigConfigs:43 of
msgid "scatter using default configuration"
msgstr ""

#: info.docfunc.FigConfigs:61 of
msgid ""
"Or customized some arguments based on ``FigConfigs``. For example, use "
"the default histogram configuration with ``width`` as 0.2."
msgstr ""

#: info.docfunc.FigConfigs:64 of
msgid "histogram with customized width"
msgstr ""

#: info.docfunc.Canvas:239 info.docfunc.FigConfigs:74 of
msgid ":py:class:`~info.docfunc.GrpSettings`"
msgstr ""

#: info.docfunc.FigConfigs:84 of
msgid "include default configuration for radar plot."
msgstr ""

#: info.docfunc.Canvas:1 of
msgid ""
"generic visualization utility. making line, scatter, histogram, beeswarm,"
" box, heatmap, radar, pie, contour figures for group and ungrouped data, "
"or viewer for images."
msgstr ""

#: info.docfunc.Canvas:6 of
msgid "specified data during initialize a Canvas instance; ``None`` as default"
msgstr ""

#: info.docfunc.Canvas:8 of
msgid ""
"figure type for visualizer; should be option among ``'line'``, "
"``'scatter'``, ``'histogram'``, ``'beeswarm'``, ``'box'``, ``'heatmap'``,"
" ``'radar'``, ``'pie'``, ``'contour'`` and ``'image'``; ``'line'`` as "
"default"
msgstr ""

#: info.docfunc.Canvas:11 of
msgid ""
"instance of GrpSettings; FigConfigs is the collection of default "
"configurations for all figure types; ``None`` as default will "
"heuristically guess then configure from ``fig_type``"
msgstr ""

#: info.docfunc.Canvas:14 of
msgid "main title for application window; ``'info'`` as default"
msgstr ""

#: info.docfunc.Canvas:15 of
msgid ""
"main window size; ``None`` as default for applying ``(640, 480)`` on "
"line, scatter, histogram, beeswarm, box plots or image viewer, ``(560, "
"560)`` on radar and pie plots"
msgstr ""

#: info.docfunc.Canvas:18 of
msgid "background color for canvas; ``'w'`` as default"
msgstr ""

#: info.docfunc.Canvas:19 of
#, python-brace-format
msgid ""
"trigger to (un)enable grids of x and y in figure; ``{'x': True, 'y': "
"True}`` as default"
msgstr ""

#: info.docfunc.Canvas:20 of
msgid "title of figure; ``None`` as default"
msgstr ""

#: info.docfunc.Canvas:21 of
#, python-brace-format
msgid ""
"configurations of figure title; ``{'color': 'k', 'size': '15pt'}`` as "
"default"
msgstr ""

#: info.docfunc.Canvas:22 of
msgid "text content for left label; ``None`` as default"
msgstr ""

#: info.docfunc.Canvas:23 of
msgid "text content for bottom label; ``None`` as default"
msgstr ""

#: info.docfunc.Canvas:24 of
#, python-brace-format
msgid ""
"configurations of left and bottom labels; ``{'color': 'b', 'font-size': "
"'13pt'}`` as default"
msgstr ""

#: info.docfunc.Canvas:26 of
msgid "trigger to (un)enable figure legend; ``False`` as default"
msgstr ""

#: info.docfunc.Canvas:27 of
#, python-brace-format
msgid ""
"(un)display axes triggers; ``{'left': True, 'top': False, 'right': False,"
" 'bottom': True}`` as default"
msgstr ""

#: info.docfunc.Canvas:29 of
msgid "a visualization application"
msgstr ""

#: info.docfunc.Canvas:31 of
msgid "invalid argument exists"
msgstr ""

#: info.docfunc.Canvas:37 of
msgid "show figure. ``data`` can be updated."
msgstr ""

#: info.docfunc.Canvas:41 of
msgid ""
"static method; ``save_as`` to specify the file name for figure to be "
"exported; ``figure.png`` as default"
msgstr ""

#: info.docfunc.Canvas:45 of
msgid ""
"static method; create a new canvas then show figure. all ``**kwargs`` "
"assignment supported."
msgstr ""

#: info.docfunc.Canvas:49 of
msgid "Use ``Canvas`` to build line plot:"
msgstr ""

#: info.docfunc.Canvas:51 of
msgid "Canvas for line plot"
msgstr ""

#: info.docfunc.Canvas:71 of
msgid "canvas used for line plot"
msgstr ""

#: info.docfunc.Canvas:73 of
msgid "And for scatter plot:"
msgstr ""

#: info.docfunc.Canvas:75 of
msgid "Canvas for scatter plot"
msgstr ""

#: info.docfunc.Canvas:87 of
msgid "canvas used for scatter plot"
msgstr ""

#: info.docfunc.Canvas:89 of
msgid "And also for histogram plot:"
msgstr ""

#: info.docfunc.Canvas:91 of
msgid "Canvas for histogram plot"
msgstr ""

#: info.docfunc.Canvas:104 of
msgid "canvas used for histogram plot"
msgstr ""

#: info.docfunc.Canvas:106 of
msgid "Also support for beeswarm plot:"
msgstr ""

#: info.docfunc.Canvas:108 of
msgid "Canvas for beeswarm plot"
msgstr ""

#: info.docfunc.Canvas:120 of
msgid "canvas used for beeswarm plot"
msgstr ""

#: info.docfunc.Canvas:122 of
msgid "For making box plot:"
msgstr ""

#: info.docfunc.Canvas:124 of
msgid "Canvas for box plot"
msgstr ""

#: info.docfunc.Canvas:135 of
msgid "canvas used for box plot"
msgstr ""

#: info.docfunc.Canvas:137 of
msgid "For making heatmap plot:"
msgstr ""

#: info.docfunc.Canvas:139 of
msgid "Canvas for heatmap plot"
msgstr ""

#: info.docfunc.Canvas:154 of
msgid "canvas used for heatmap plot"
msgstr ""

#: info.docfunc.Canvas:156 of
msgid "For radar plot:"
msgstr ""

#: info.docfunc.Canvas:158 of
msgid "Canvas for radar plot"
msgstr ""

#: info.docfunc.Canvas:181 of
msgid "canvas used for radar plot"
msgstr ""

#: info.docfunc.Canvas:183 of
msgid "For pie plot:"
msgstr ""

#: info.docfunc.Canvas:185 of
msgid "Canvas for pie plot"
msgstr ""

#: info.docfunc.Canvas:197 of
msgid "canvas used for pie plot"
msgstr ""

#: info.docfunc.Canvas:199 of
msgid "For contour plot:"
msgstr ""

#: info.docfunc.Canvas:201 of
msgid "Canvas for iso-contour plot"
msgstr ""

#: info.docfunc.Canvas:214 of
msgid "canvas used for contour plot"
msgstr ""

#: info.docfunc.Canvas:216 of
msgid "Use as an image viewer:"
msgstr ""

#: info.docfunc.Canvas:218 of
msgid "Canvas as image viewer"
msgstr ""

#: info.docfunc.Canvas:230 of
msgid "canvas used for image viewer"
msgstr ""

#: info.docfunc.Canvas:234 of
msgid ""
"If ``IndexError`` raised, reassign ``name`` in ``fig_configs`` by "
":py:class:`~info.docfunc.GrpSettings`, or by updating default "
"configuration set :py:class:`~info.docfunc.FigConfigs`."
msgstr ""

#: info.docfunc.Canvas:241 of
msgid ":py:class:`~info.docfunc.FigConfigs`"
msgstr ""

#: info.docfunc.Canvas:249 of
msgid ""
"support heatmap, radar, and pie plot. heuristically guess and "
"configuration of ``fig_configs``."
msgstr ""

#: info.docfunc.Canvas:253 of
msgid ""
"support writing image via ``save`` method. no limitation for 10 groups of"
" data in maximum anymore."
msgstr ""

#: info.docfunc.Canvas:257 of
msgid ""
"support iso contour plot. attach interactive color bar item to heatmap "
"and contour plot. add logic of length check, as well as horizontal label "
"trigger for tags in heatmap."
msgstr ""

#: info.docfunc.ImageViewer:5 of
msgid "size for main window of application; ``(1000, 1000)`` as default"
msgstr ""

#: info.docfunc.ImageViewer:6 of
msgid "an ImageViewer instance"
msgstr ""

#: info.docfunc.ImageViewer:13 of
msgid "view 3D image."
msgstr ""

#: info.docfunc.ImageViewer:15 of
msgid "3-dimensional ndarray"
msgstr ""

#: info.docfunc.ImageViewer:16 of
msgid "list of bool ndarray with 3 dimension; ``None`` as default for no mask"
msgstr ""

#: info.docfunc.ImageViewer:17 of
msgid ""
"iterable object with length of 3 to specify spacing values; ``(1, 1, 1)``"
" as default"
msgstr ""

#: info.docfunc.ImageViewer:19 of
msgid ""
"iterable object with length of 3 to specify origin values; ``(0, 0, 0)`` "
"as default"
msgstr ""

#: info.docfunc.ImageViewer:21 of
msgid "title to be displayed in main window; ``None`` as default"
msgstr ""

#: info.docfunc.ImageViewer:22 of
msgid ""
"initial low and high values of grey level; values should be numeric; if "
"those values range from 0. to 1. simultaneously, grey level percentage "
"will be applied; ``(0.688, 0.997)`` as default"
msgstr ""

#: info.docfunc.ImageViewer:25 of
msgid ""
"RGB shader colors if ``mask`` was assigned; value ranges from 0.0 to 1.0 "
"in each channel; ``None`` as default for random colors; if specified, "
"substitution for mask shaders takes places sequentially"
msgstr ""

#: info.docfunc.ImageViewer:32 of
msgid ""
"static method; create a new ImageViewer then view 3D image. all "
"parameters defined the same as those when calling ``view``."
msgstr ""

#: info.docfunc.ImageViewer:37 of
msgid "interactively view 3D image"
msgstr ""

#: info.docfunc.ImageViewer:53 of
msgid "Following :ref:`figure <image viewer for 3D image>` for preview:"
msgstr ""

#: info.docfunc.ImageViewer:60 of
msgid "ImageViewer for 3D image"
msgstr ""

#: info.docfunc.ImageViewer:62 of
msgid "Or if the images have the corresponding segmentations:"
msgstr ""

#: info.docfunc.ImageViewer:64 of
msgid "interactively view 3D image with segmentation"
msgstr ""

#: info.docfunc.ImageViewer:78 of
msgid "ImageViewer for 3D image with segmentation"
msgstr ""

#: info.docfunc.ImageViewer:86 of
msgid ""
"Implementation uses linked views, instead of projection with sliced "
"segmentation line. Support origin, colored segmentations, and 3D "
"visualization with OpenGL rendering."
msgstr ""

#: info.docfunc.ImageViewer:91 of
msgid ""
"No limitation for mask numbers during visualization (3 in maximum the "
"former); fix the exception raised in sequential playing."
msgstr ""

#: ../../source/interface/api_visual.rst
msgid "Authors"
msgstr ""

#: ../../source/interface/api_visual.rst:35
msgid "Chen Zhang"
msgstr ""

#: ../../source/interface/api_visual.rst
msgid "Version"
msgstr ""

#: ../../source/interface/api_visual.rst:36
msgid "0.0.5"
msgstr ""

#: ../../source/interface/api_visual.rst
msgid "|create|"
msgstr ""

#: ../../source/interface/api_visual.rst:37
msgid "Jun 29, 2023"
msgstr ""

#~ msgid ""
#~ "generic visualization utility. making line,"
#~ " scatter, histogram, beeswarm, box, "
#~ "heatmap, radar, pie figures for group"
#~ " and ungrouped data, or viewer for"
#~ " images."
#~ msgstr ""

#~ msgid ""
#~ "figure type for visualizer; should be"
#~ " option among ``'line'``, ``'scatter'``, "
#~ "``'histogram'``, ``'beeswarm'``, ``'box'``, "
#~ "``'heatmap'``, ``'radar'``, ``'pie'`` and "
#~ "``'image'``; ``'line'`` as default"
#~ msgstr ""

#~ msgid "when number of groups exceeds 10 (the default max number of groups)"
#~ msgstr ""

#~ msgid ""
#~ "statistic method; ``save_as`` to specify "
#~ "the file name for figure to be "
#~ "exported; ``figure.png`` as default"
#~ msgstr ""

#~ msgid ""
#~ "statistic method; create a new canvas"
#~ " then show figure. all ``**kwargs`` "
#~ "assignment supported."
#~ msgstr ""

#~ msgid "support writing image via ``save`` method."
#~ msgstr ""

#~ msgid ""
#~ "list of bool ndarray with 3 "
#~ "dimension; Support observing 3 masks "
#~ "simultaneously in maximum; ``None`` as "
#~ "default"
#~ msgstr ""

#~ msgid ""
#~ "statistic method; create a new "
#~ "ImageViewer then view 3D image. all "
#~ "parameters defined the same as those "
#~ "when calling ``view``."
#~ msgstr ""

#~ msgid "0.0.4"
#~ msgstr ""

